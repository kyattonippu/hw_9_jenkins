plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

group 'com.kyattonippu'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.23.0",
    selenideVersion = "6.17.0",
    junitVersion = "5.9.3",
    slf4jVersion = "2.0.7"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation (
            "com.github.javafaker:javafaker:1.0.2",
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "io.qameta.allure:allure-selenide:$allureVersion"
    )

    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}